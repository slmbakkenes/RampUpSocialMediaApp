# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - ramp-up-project

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Install Node.js to build Tailwind CSS
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Use the correct Node.js version for your project

      # Install Node.js dependencies for Tailwind CSS
      - name: Install Node.js dependencies
        run: npm install

      # Build Tailwind CSS
      - name: Build Tailwind CSS
        run: npm run build  # Ensure you have a "build" script in package.json for Tailwind

      # Set up and activate the Python virtual environment
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      # Install Python dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      # Zip the artifact for deployment
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      # Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_A91CBE61DA56414F8542DF74C08AA445 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_9C8605828EF64A46A8DB947FFE0A820A }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_A470AF6F57D84F3788891A13501F49C3 }}

      # Deploy to Azure Web App
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'ramp-up-project'
          slot-name: 'Production'

      # Run Django migrations on Azure
      - name: Run migrations
        run: python manage.py migrate

      # Collect static files
      - name: Collect static files
        run: python manage.py collectstatic --noinput
